AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Immigration AI Agent Backend - CORS Fixed

Globals:
  Function:
    Timeout: 30
    Runtime: python3.11
    MemorySize: 512
    Environment:
      Variables:
        USERS_TABLE: !Ref UsersTable
        POLICIES_TABLE: !Ref PoliciesTable
        ENVIRONMENT: dev

Resources:
  # DynamoDB Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: immigration-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  PoliciesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: immigration-policies
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: policy_id
          AttributeType: S
        - AttributeName: published_date
          AttributeType: S
      KeySchema:
        - AttributeName: policy_id
          KeyType: HASH
        - AttributeName: published_date
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # Lambda Functions
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: immigration-ai-signup
      CodeUri: lambdas/auth/
      Handler: signup.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        Signup:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/auth/signup
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: immigration-ai-login
      CodeUri: lambdas/auth/
      Handler: login.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/auth/login
            Method: post

  GetPoliciesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: immigration-ai-get-policies
      CodeUri: lambdas/policies/
      Handler: get_policies.lambda_handler
      Layers:
        - !Ref SharedLibLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PoliciesTable
      Events:
        GetPolicies:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/policies
            Method: get

  ScrapePoliciesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: immigration-ai-scrape-policies
      CodeUri: lambdas/policies/
      Handler: scrape_policies.lambda_handler
      Timeout: 300
      MemorySize: 1024
      Environment:
        Variables:
          GEMINI_API_KEY: !Sub '{{resolve:secretsmanager:immigration-ai/gemini-key}}'
      Layers:
        - !Ref SharedLibLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PoliciesTable
        - Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: 
              - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:immigration-ai/gemini-key*'
      Events:
        ManualInvoke:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /api/policies/scrape
            Method: post

  SharedLibLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: immigration-ai-shared-lib
      ContentUri: lambdas/lib/
      CompatibleRuntimes:
        - python3.11

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: immigration-ai-api
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Requested-With,Accept'"
        AllowOrigin: "'*'"
        AllowCredentials: false
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Requested-With,Accept'"
              Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Requested-With,Accept'"
              Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"

Outputs:
  ApiEndpoint:
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  
  PoliciesTableName:
    Value: !Ref PoliciesTable